import { fetchAlbumRes } from "./GraphQL/fetchAlbum.js";
import { TopTracksItem } from "./GraphQL/sharedTypes.js";
export type TrackData = {
    uri: string;
    uid?: string;
    name: string;
    albumUri: string;
    albumName?: string;
    artistUris: string[];
    artistName: string;
    durationMilis: number;
    playcount?: number;
    popularity?: number;
    releaseDate?: number;
    lastfmPlaycount?: number;
    scrobbles?: number;
    personalScrobbles?: number;
};
export declare const parseTopTrackFromArtist: ({ track }: TopTracksItem) => {
    uri: string;
    uid: any;
    name: string;
    albumUri: string;
    albumName: any;
    artistUris: string[];
    artistName: string;
    durationMilis: number;
    playcount: number;
    popularity: any;
    releaseDate: any;
};
export declare const parseArtistLikedTrack: (track: Platform.Track) => {
    uri: any;
    uid: any;
    name: any;
    albumUri: any;
    albumName: any;
    artistUris: any;
    artistName: any;
    durationMilis: any;
    playcount: any;
    popularity: any;
    releaseDate: any;
};
export declare const parseAlbumTrack: ({ track }: fetchAlbumRes["tracks"]["items"][0]) => {
    uri: string;
    uid: any;
    name: string;
    albumUri: string;
    albumName: string;
    artistUris: string[];
    artistName: string;
    durationMilis: number;
    playcount: number;
    popularity: any;
    releaseDate: number;
};
export declare const parsePlaylistAPITrack: (track: Platform.PlaylistAPI.Track) => {
    uri: any;
    uid: any;
    name: any;
    albumUri: any;
    albumName: any;
    artistUris: any;
    artistName: any;
    durationMilis: any;
    playcount: any;
    popularity: any;
    releaseDate: any;
};
export declare const parseWebAPITrack: (track: Track) => {
    uri: any;
    uid: any;
    name: any;
    albumUri: any;
    albumName: any;
    artistUris: any;
    artistName: any;
    durationMilis: any;
    playcount: any;
    popularity: any;
    releaseDate: number;
};
export declare const parseLibraryAPILikedTracks: (track: Platform.Track) => {
    uri: any;
    uid: any;
    name: any;
    albumUri: any;
    albumName: any;
    artistUris: any;
    artistName: any;
    durationMilis: any;
    playcount: any;
    popularity: any;
    releaseDate: any;
};
